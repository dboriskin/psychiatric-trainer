import React, { useState, useEffect, useRef } from 'react';
import { TelegramMainButton, TelegramBackButton, ButtonFallback } from '../telegram';
import { useNavigationStore } from '../../store/navigationStore';
import { useTelegram } from '../telegram/TelegramProvider';
import { CaseDetail } from '../../services/api';
import { useProgress } from '../../hooks/useProgress';
import { CaseNavigation } from '../base/CaseNavigation';

interface ExpertCommentaryProps {
  caseDetail: CaseDetail;
}

export const ExpertCommentary: React.FC<ExpertCommentaryProps> = ({ caseDetail }) => {
  const { goBack, setStage } = useNavigationStore();
  const { webApp } = useTelegram();
  const { progress, updateProgress } = useProgress();
  const [showExtended, setShowExtended] = useState(false);
  const [isVideoPlaying, setIsVideoPlaying] = useState(false);
  const [videoProgress, setVideoProgress] = useState(0);
  const [isVideoExpanded, setIsVideoExpanded] = useState(false);
  const [activeNoteIndex, setActiveNoteIndex] = useState<number | null>(null);
  const videoRef = useRef<HTMLVideoElement>(null);
  
  // –î–ª—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –¥–µ–ª–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–º–∏
  const allOptionsViewed = true;

  useEffect(() => {
    console.log('ExpertCommentary component mounted');
    console.log('Extended content available:', !!caseDetail.expertCommentary.extendedContent);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–ª—É—á–∞—è –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω
    if (progress && !progress.completed) {
      updateProgress({
        completed: true,
        currentStage: 'expert-comment',
        stagesCompleted: [...(progress.stagesCompleted || []), 'expert-comment']
      });
    }
  }, [caseDetail, progress, updateProgress]);

  const handleBack = () => {
    console.log('ExpertCommentary: going back to results');
    if (webApp?.HapticFeedback) {
      webApp.HapticFeedback.impactOccurred('light');
    }
    goBack();
  };

  const handleFinish = () => {
    console.log('ExpertCommentary: finishing the case');
    if (webApp?.HapticFeedback) {
      webApp.HapticFeedback.notificationOccurred('success');
    }
    
    // –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    setStage('categories');
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –º—ã –±—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
    // if (webApp && webApp.sendData) {
    //   const result = { caseId: caseDetail.id, completed: true };
    //   webApp.sendData(JSON.stringify(result));
    // }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ
  const handleVideoClick = () => {
    if (videoRef.current) {
      if (videoRef.current.paused) {
        videoRef.current.play();
        setIsVideoPlaying(true);
        if (webApp?.HapticFeedback) {
          webApp.HapticFeedback.impactOccurred('light');
        }
      } else {
        videoRef.current.pause();
        setIsVideoPlaying(false);
        if (webApp?.HapticFeedback) {
          webApp.HapticFeedback.impactOccurred('light');
        }
      }
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤–∏–¥–µ–æ
  const handleVideoTimeUpdate = () => {
    if (videoRef.current) {
      const progress = (videoRef.current.currentTime / videoRef.current.duration) * 100;
      setVideoProgress(progress);
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤–∏–¥–µ–æ
  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = Math.floor(seconds % 60);
    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;
  };
  
  // –û–ø—Ä–µ–¥–µ–ª–∏–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫ —ç–∫—Å–ø–µ—Ä—Ç–∞
  const expertNotes = [
    {
      title: "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
      content: "–ü—Ä–∏ –ø–æ—Å–ª–µ—Ä–æ–¥–æ–≤–æ–π –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –≤–∞–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –±–∏–ø–æ–ª—è—Ä–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –ø–æ—Å–∫–æ–ª—å–∫—É –∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç—ã –º–æ–≥—É—Ç —Å–ø—Ä–æ–≤–æ—Ü–∏—Ä–æ–≤–∞—Ç—å –º–∞–Ω–∏—é. –í –∞–Ω–∞–º–Ω–µ–∑–µ –ø–∞—Ü–∏–µ–Ω—Ç–∫–∏ –Ω–µ—Ç —É–∫–∞–∑–∞–Ω–∏–π –Ω–∞ –º–∞–Ω–∏–∞–∫–∞–ª—å–Ω—ã–µ –∏–ª–∏ –≥–∏–ø–æ–º–∞–Ω–∏–∞–∫–∞–ª—å–Ω—ã–µ —ç–ø–∏–∑–æ–¥—ã, —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –¥–∏–∞–≥–Ω–æ–∑ —É–Ω–∏–ø–æ–ª—è—Ä–Ω–æ–π –¥–µ–ø—Ä–µ—Å—Å–∏–∏.",
      icon: "üîç"
    },
    {
      title: "–§–∞—Ä–º–∞–∫–æ—Ç–µ—Ä–∞–ø–∏—è –ø—Ä–∏ –≥—Ä—É–¥–Ω–æ–º –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–∏",
      content: "–°–µ—Ä—Ç—Ä–∞–ª–∏–Ω –∏–º–µ–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –≥—Ä—É–¥–Ω–æ–º –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–∏ –∏–∑ –≤—Å–µ—Ö –°–ò–û–ó–°. –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≤ –≥—Ä—É–¥–Ω–æ–º –º–æ–ª–æ–∫–µ –∏ –ø–ª–∞–∑–º–µ –º–ª–∞–¥–µ–Ω—Ü–µ–≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞, –∏ –Ω–µ—Ç —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–º –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä–µ–±–µ–Ω–∫–∞.",
      icon: "üíä"
    },
    {
      title: "–î–∏–Ω–∞–º–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è",
      content: "–¢–∏–ø–∏—á–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–∏ —Ç–µ—Ä–∞–ø–∏–∏ –°–ò–û–ó–°: –ø–µ—Ä–≤—ã–º–∏ —É–ª—É—á—à–∞—é—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–∏–º–ø—Ç–æ–º—ã (—Å–æ–Ω, –∞–ø–ø–µ—Ç–∏—Ç, —ç–Ω–µ—Ä–≥–∏—è) –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –Ω–µ–¥–µ–ª—å, –∑–∞—Ç–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—á–µ—Ä–µ–∑ 2-4 –Ω–µ–¥–µ–ª–∏), –∏ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—á–µ—Ä–µ–¥—å - –∏–Ω—Ç–µ—Ä–µ—Å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è (3-6 –Ω–µ–¥–µ–ª—å).",
      icon: "üìà"
    },
    {
      title: "–†–∞–±–æ—Ç–∞ —Å —á—É–≤—Å—Ç–≤–æ–º –≤–∏–Ω—ã",
      content: "–ß—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã –ø–µ—Ä–µ–¥ —Ä–µ–±–µ–Ω–∫–æ–º - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–º–ø—Ç–æ–º —É –º–Ω–æ–≥–∏—Ö –∂–µ–Ω—â–∏–Ω —Å –ø–æ—Å–ª–µ—Ä–æ–¥–æ–≤–æ–π –¥–µ–ø—Ä–µ—Å—Å–∏–µ–π. –í–∞–∂–Ω–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —á—É–≤—Å—Ç–≤–∞ –∏ –æ–±—ä—è—Å–Ω–∏—Ç—å –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø—Ä–∏—Ä–æ–¥—É –Ω–∞—Ä—É—à–µ–Ω–∏–π. –°—Ç–∏–≥–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã —á–∞—Å—Ç–æ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –±–∞—Ä—å–µ—Ä–æ–º –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∑–∞ –ø–æ–º–æ—â—å—é.",
      icon: "üß†"
    }
  ];

  return (
    <div className="min-h-screen pb-20">
      <div className="bg-primary text-white p-4">
        <h1 className="text-xl font-bold">{caseDetail.expertCommentary.title}</h1>
        <p className="text-sm opacity-90">–ú–Ω–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞</p>
      </div>

      <div className="p-4">
        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∫–µ–π—Å–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        <CaseNavigation className="mb-4" />
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–ø–µ—Ä—Ç–µ */}
        <div className="bg-white rounded-xl shadow-md p-4 mb-6">
          <div className="flex items-center">
            <div className="w-12 h-12 bg-primary/20 rounded-full mr-3 flex items-center justify-center text-primary font-bold">
              –î–í
            </div>
            <div>
              <h2 className="font-bold">–î-—Ä –í–æ–ª–∫–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤–∏—á</h2>
              <p className="text-sm text-gray-600">–ü—Å–∏—Ö–∏–∞—Ç—Ä, –∫–∞–Ω–¥–∏–¥–∞—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –Ω–∞—É–∫</p>
              <p className="text-xs text-gray-500 mt-1">–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–µ—Ä–∏–Ω–∞—Ç–∞–ª—å–Ω–æ–π –ø—Å–∏—Ö–∏–∞—Ç—Ä–∏–∏, 15 –ª–µ—Ç –æ–ø—ã—Ç–∞</p>
            </div>
          </div>
        </div>
        
        {/* –í–∏–¥–µ–æ–ø–ª–µ–µ—Ä —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º —ç–∫—Å–ø–µ—Ä—Ç–∞ */}
        <div className="bg-white rounded-xl shadow-md overflow-hidden mb-6 relative transition-all duration-300 ease-in-out"
          style={{
            position: isVideoExpanded ? 'fixed' : 'relative',
            top: isVideoExpanded ? '0' : 'auto',
            left: isVideoExpanded ? '0' : 'auto',
            right: isVideoExpanded ? '0' : 'auto',
            bottom: isVideoExpanded ? '0' : 'auto',
            zIndex: isVideoExpanded ? 50 : 'auto',
            borderRadius: isVideoExpanded ? '0' : '0.75rem',
          }}
        >
          <div 
            className="relative cursor-pointer"
            onClick={handleVideoClick}
          >
            {/* –ó–∞–≥–ª—É—à–∫–∞ –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä–∞ */}
            <div 
              className="bg-gray-900 aspect-video relative overflow-hidden"
              style={{
                height: isVideoExpanded ? '100vh' : 'auto',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}
            >
              {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–¥–µ—Å—å —Ä–µ–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä –≤–º–µ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∏ */}
              <video 
                ref={videoRef}
                className="w-full h-full object-contain"
                poster="https://via.placeholder.com/1280x720/333333/FFFFFF?text=–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π+—ç–∫—Å–ø–µ—Ä—Ç–∞"
                onTimeUpdate={handleVideoTimeUpdate}
                onPlay={() => setIsVideoPlaying(true)}
                onPause={() => setIsVideoPlaying(false)}
                onEnded={() => setIsVideoPlaying(false)}
              >
                <source src={caseDetail.expertCommentary.videoUrl || ""} type="video/mp4" />
                –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
              </video>
              
              {/* –ö–Ω–æ–ø–∫–∞ Play/Pause */}
              {!isVideoPlaying && (
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="w-16 h-16 bg-primary/80 rounded-full flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    </svg>
                  </div>
                </div>
              )}
            </div>
            
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤–∏–¥–µ–æ */}
            <div className="absolute bottom-0 left-0 right-0 h-1 bg-gray-700">
              <div 
                className="h-full bg-primary"
                style={{ width: `${videoProgress}%` }}
              ></div>
            </div>
          </div>
          
          {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ */}
          <div className="px-4 py-3 flex justify-between items-center">
            <div className="flex items-center">
              <button 
                className="p-2 rounded-full hover:bg-gray-100"
                onClick={handleVideoClick}
              >
                {isVideoPlaying ? (
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                ) : (
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                  </svg>
                )}
              </button>
              <span className="text-xs ml-2">
                {videoRef.current 
                  ? `${formatTime(videoRef.current.currentTime)} / ${formatTime(videoRef.current.duration || 0)}`
                  : "0:00 / 0:00"
                }
              </span>
            </div>
            
            <button 
              className="p-2 rounded-full hover:bg-gray-100"
              onClick={() => {
                console.log("Toggling fullscreen mode");
                setIsVideoExpanded(!isVideoExpanded);
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º DOM –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                setTimeout(() => window.dispatchEvent(new Event('resize')), 50);
              }}
            >
              {isVideoExpanded ? (
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              ) : (
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4" />
                </svg>
              )}
            </button>
          </div>
          
          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ */}
          {isVideoExpanded && (
            <button 
              className="absolute top-4 right-4 p-2 bg-black/50 rounded-full"
              onClick={() => setIsVideoExpanded(false)}
            >
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          )}
        </div>

        {/* –ë–∞–∑–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
        <div className="bg-white rounded-xl shadow-md p-4 mb-6">
          <h2 className="text-lg font-bold mb-3">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞</h2>
          <div className="text-gray-700 whitespace-pre-line">
            {caseDetail.expertCommentary.basicContent}
          </div>
        </div>
        
        {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞ */}
        <div className="mb-6">
          <h3 className="font-bold mb-3">–ö–ª—é—á–µ–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
            {expertNotes.map((note, index) => (
              <div 
                key={index}
                className={`border rounded-xl p-3 cursor-pointer transition-all ${
                  activeNoteIndex === index 
                    ? 'border-primary bg-primary/10 shadow transform scale-[1.02]'
                    : 'border-gray-200 hover:bg-gray-50'
                }`}
                onClick={() => {
                  setActiveNoteIndex(activeNoteIndex === index ? null : index);
                  if (webApp?.HapticFeedback) {
                    webApp.HapticFeedback.selectionChanged();
                  }
                }}
              >
                <div className="flex items-start">
                  <div className="text-2xl mr-3">{note.icon}</div>
                  <div>
                    <h4 className="font-medium">{note.title}</h4>
                    {activeNoteIndex === index && (
                      <p className="text-sm mt-2 text-gray-700">{note.content}</p>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∏–∑—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤) */}
        {allOptionsViewed ? (
          <div className="bg-white rounded-xl shadow-md p-4 mb-6">
            <div className="flex justify-between items-center mb-3">
              <div className="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-green-600 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                </svg>
                <h2 className="text-lg font-bold">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</h2>
              </div>
              
              {!showExtended && (
                <button 
                  className="text-primary font-medium flex items-center"
                  onClick={() => {
                    setShowExtended(true);
                    if (webApp?.HapticFeedback) {
                      webApp.HapticFeedback.impactOccurred('light');
                    }
                  }}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                  –ü–æ–∫–∞–∑–∞—Ç—å
                </button>
              )}
            </div>
            
            {showExtended ? (
              <div className="text-gray-700 whitespace-pre-line">
                {caseDetail.expertCommentary.extendedContent}
              </div>
            ) : (
              <div className="bg-blue-50 p-4 rounded-lg text-blue-800 flex">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-blue-600 mr-2 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <p>–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω! –ù–∞–∂–º–∏—Ç–µ "–ü–æ–∫–∞–∑–∞—Ç—å", —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞.</p>
              </div>
            )}
          </div>
        ) : (
          <div className="bg-gray-100 rounded-xl shadow-md p-4 border border-gray-300">
            <div className="flex items-center space-x-3 mb-3">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
              <h2 className="text-lg font-bold text-gray-500">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</h2>
            </div>
            <p className="text-gray-500">
              –ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –∏–∑—É—á–∏—Ç–µ –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ª–µ—á–µ–Ω–∏—è.
            </p>
          </div>
        )}
        
        {/* –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –∫–µ–π—Å–∞ */}
        <div className="bg-gradient-to-r from-primary/20 to-blue-100 rounded-xl shadow-md p-5 mb-6 border border-primary/30">
          <div className="text-center mb-3">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 mx-auto text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
            </svg>
            <h3 className="text-lg font-bold mt-2">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h3>
            <p className="text-sm text-gray-600">–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–π —Å–ª—É—á–∞–π</p>
          </div>
          
          <div className="text-center mt-4">
            <h4 className="font-bold text-xl">{caseDetail.title}</h4>
            <p className="text-sm mt-1">–ü—Ä–æ–≥—Ä–µ—Å—Å: 100%</p>
            
            <button 
              className="mt-4 bg-primary text-white px-4 py-2 rounded-lg font-medium"
              onClick={handleFinish}
            >
              –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–ª—É—á–∞–π
            </button>
          </div>
        </div>
      </div>

      {/* Back Button */}
      <TelegramBackButton onClick={handleBack} />

      {/* Main Button */}
      <TelegramMainButton
        text="–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–ª—É—á–∞–π"
        onClick={handleFinish}
      />
      
      {/* Fallback –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ */}
      <ButtonFallback
        mainButtonText="–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–ª—É—á–∞–π"
        onMainButtonClick={handleFinish}
        onBackButtonClick={handleBack}
      />
    </div>
  );
};